---
import recipes from '/src/data/manufacturinc/recipes.json';
import tools from '/src/data/manufacturinc/tools.json';

import ManufacturincRecipe from '/src/components/ManufacturincRecipe';
import SpoilerWarning from '/src/components/SpoilerWarning';

import Layout from '/src/layout/layout.astro';
import LanguagePicker from '/src/components/LanguagePicker/index.astro';

import { getLangFromUrl, useTranslatedPath, useTranslations } from '/src/i18n/utils';

import '/src/css/item-page.css';

export function getStaticPaths() {
	return tools.map(x => ({ params: { element: x.id } }));
}

const { element } = Astro.params;

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

const filteredRecipes = recipes.filter(x => x.name === element);
---
<Layout title={`Manufactur'inc - ${t(`manufacturinc:wiki:item-page-title`)} - ${t(`manufacturinc:equipments:${element}`)}`} description={t(`manufacturinc:wiki:equipment-page-description`).replace('%element%', t(`manufacturinc:equipments:${element}`))}>
	<div class="item-page">
		<LanguagePicker />

		<h1>{t(`manufacturinc:equipments:${element}`) || element}</h1>

		<img src={`/img/manufacturinc/equipments/${element}.svg`} alt={t(`manufacturinc:equipments:${element}`)} />

		<SpoilerWarning t={t} />

		<h2>{t(`manufacturinc:wiki:detail-pages-recipes`)}</h2>

		{filteredRecipes.length == 0 ? <p>{t(`manufacturinc:wiki:detail-pages-recipes-none`)}</p> : null}

		<div>
			{filteredRecipes.map(x => {
				return (
					<ManufacturincRecipe recipe={x} current={element} t={t} translatePath={translatePath} tools={tools} />
				);
			})}
		</div>
	</div>
</Layout>
